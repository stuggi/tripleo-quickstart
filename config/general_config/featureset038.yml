# Deploy an Openstack environment with Octavia in a containerized overcloud
#
composable_scenario: scenario010-multinode-containers.yaml

network_isolation: false
enable_pacemaker: false
overcloud_ipv6: false
containerized_overcloud: true
delete_docker_cache: true

containerized_undercloud: >-
  {% if release not in ['newton','ocata','pike','queens'] -%}
  true
  {%- else -%}
  false
  {%- endif -%}

undercloud_templates_path: /usr/share/openstack-tripleo-heat-templates
undercloud_custom_env_files: "{{ working_dir }}/undercloud-parameter-defaults.yaml"
undercloud_cloud_domain: "localdomain"
undercloud_undercloud_hostname: "undercloud.{{ undercloud_cloud_domain }}"
ctlplane_masquerade: >-
  {% if release not in ['newton','ocata','pike','queens'] -%}
  true
  {%- else -%}
  false
  {%- endif -%}

# This enables TLS for the undercloud which will also make haproxy bind to the
# configured public-vip and admin-vip.
undercloud_generate_service_certificate: false

# This enables the deployment of the overcloud with SSL.
ssl_overcloud: false
composable_roles: true
overcloud_roles:
  - name: Controller
    CountDefault: 1
    tags:
      - primary
      - controller
    networks:
      - External
      - InternalApi
      - Storage
      - StorageMgmt
      - Tenant

# This featureset is extremely resource intensive, so we disable telemetry
# in order to reduce the overall memory footprint
# This is not required in newton
telemetry_args: >-
   {% if release != 'newton' %}
   -e {{ overcloud_templates_path }}/environments/disable-telemetry.yaml
   {% endif %}

# options below direct automatic doc generation by tripleo-collect-logs
artcl_gen_docs: true
artcl_create_docs_payload:
  included_deployment_scripts:
    - undercloud-install
    - overcloud-custom-tht-script
    - overcloud-prep-containers
    - overcloud-prep-flavors
    - overcloud-prep-images
    - overcloud-prep-network
    - overcloud-deploy
    - overcloud-deploy-post
    - overcloud-upgrade
    - overcloud-validate
  included_static_docs:
    - env-setup-virt
  table_of_contents:
    - env-setup-virt
    - undercloud-install
    - overcloud-custom-tht-script
    - overcloud-prep-containers
    - overcloud-prep-flavors
    - overcloud-prep-images
    - overcloud-prep-network
    - overcloud-deploy
    - overcloud-deploy-post
    - overcloud-upgrade
    - overcloud-validate

deployed_server: >-
  {% if release in ['newton','ocata','pike','queens'] -%}
  true
  {%- else -%}
  false
  {%- endif -%}
deploy_steps_ansible_workflow: >-
  {% if release not in ['newton','ocata','pike','queens'] -%}
  true
  {%- else -%}
  false
  {%- endif -%}
config_download_args: >-
  {% if release not in ['newton','ocata','pike','queens'] -%}
  -e {{ working_dir }}/config-download.yaml
  --disable-validations
  --verbose
  {%- endif -%}

# selectively re-enable the globally blacklist octavia tempest plugin.
skip_test_file: "{{ playbook_dir | dirname }}/vars/tempest_skip_{{ release | default('master') }}.yml"
skip_list_tests: "{{ lookup('file', skip_test_file) | from_yaml }}"
skip_file_src: ''
tempest_black: "{{ skip_list_tests.known_failures | json_query('[?test != `octavia_tempest_plugin`].test') }}"
test_black_regex: "{{ tempest_black }}"

test_ping: false
test_white_regex: ''

tempest_whitelist:
  - 'octavia_tempest_plugin.tests.scenario.v2.test_load_balancer.LoadBalancerScenarioTest'
tempest_plugins:
  - python-octavia-tests-tempest
tempest_extra_config:
  load_balancer.member_role: '"Member"'
  load_balancer.test_with_ipv6: false
  load_balancer.region: 'regionOne'
  load_balancer.enabled_provider_drivers: '"amphora:The Octavia Amphora driver.,octavia:Deprecated alias of the Octavia Amphora driver.,ovn:Octavia OVN driver."'

undercloud_container_cli: podman

# the variable is only used in overcloud-deploy role
# for stein and beyond, so it's safe to set it to podman,
# as for stable branches the variable won't be used.
overcloud_container_cli: podman
download_amphora: true
amphora_url: 'https://images.rdoproject.org/octavia/{{ release }}/amphora-x64-haproxy-centos.qcow2'
