undercloud_generate_service_certificate: false
ssl_overcloud: false
undercloud_check_idempotency: true
undercloud_check_sanity: false
containerized_undercloud: false

# in order to still support running this job on instack-undercloud, we need
# to specify a different install command for >= Stein since we dropped the
# python-tripleoclient integration
undercloud_install_cmd: >-
  {% if containerized_undercloud|bool or release in ['ocata', 'pike', 'queens'] -%}
  openstack undercloud install
  {%- else -%}
  instack-undercloud
  {%- endif -%}

undercloud_rpm_dependencies: >-
  {% if containerized_undercloud|bool or release in ['ocata', 'pike', 'queens'] -%}
  python-tripleoclient
  {%- else -%}
  instack-undercloud python-tripleoclient
  {%- endif -%}

# Tempest configuration, keep always at the end of the file
tempest_cloud_name: 'undercloud'
test_ping: false
test_regex: ''
tempest_undercloud: true
tempest_overcloud: false
# Basic set of tempest tests to validate undercloud
tempest_test_whitelist:
  - 'tempest.api.identity'
  - 'tempest.api.image.v2.test_images.BasicOperationsImagesTest'
  - 'tempest.api.image.v2.test_images_tags_negative.ImagesTagsNegativeTest'
  - 'tempest.api.image.v2.test_images_member_negative.ImagesMemberNegativeTest'
  - 'tempest.api.compute.admin.test_flavors'
  - 'tempest.api.compute.flavors'
  - 'tempest.api.compute.keypairs'
  - 'tempest.api.compute.admin.test_quotas'
  - 'tempest.api.compute.admin.test_aggregates_negative'
  - 'tempest.api.compute.security_groups'
  - 'tempest.api.network.test_networks'
  - 'tempest.api.network.test_networks_negative'
  - 'tempest.api.network.test_security_groups_negative'
  - 'tempest.api.network.test_ports'
  - 'tempest.api.network.test_routers_negative'
